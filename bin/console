#!/usr/bin/env php
<?php

const ROOT_PATH = __DIR__ .'/../';

require_once ROOT_PATH . '/vendor/autoload.php';

//
// Load environment specific options.
//
$dotenv = new \Dotenv\Dotenv(ROOT_PATH);
$dotenv->load();

$console = new \Symfony\Component\Console\Application();
$container = \App\Kernel\ContainerFactory::create(ROOT_PATH, getenv('DEBUG'));

/** @var \Doctrine\ORM\EntityManagerInterface $em */
$em = $container->get('em');

$migrationConfiguration = new \Doctrine\DBAL\Migrations\Configuration\Configuration(
    $em->getConnection()
);
$migrationConfiguration->setMigrationsDirectory(ROOT_PATH . '/db/migrations');
$migrationConfiguration->setMigrationsNamespace('Migrations');

$console->setHelperSet(new \Symfony\Component\Console\Helper\HelperSet([
    'entityManager' => new \Doctrine\ORM\Tools\Console\Helper\EntityManagerHelper($em),
    'configuration' => new \Doctrine\DBAL\Migrations\Tools\Console\Helper\ConfigurationHelper(
        $em->getConnection(),
        $migrationConfiguration
    ),
    'dialog' => new \Symfony\Component\Console\Helper\QuestionHelper(),
]));

$console->addCommands([
    new \App\Command\DocumentsSyncCommand(
        $container->get(\App\Storage\Storage::class),
        $em->getConnection()
    ),
    new \App\Command\DocumentIndexInitializeCommand(
        $container->get(\App\Storage\Adapter\StorageAdapterInterface::class),
        $container->get(\App\Storage\Index\StorageIndexInterface::class),
        $em
    ),
    new \App\Command\DocumentIndexUpdateCommand(
        $container->get(\App\Storage\Adapter\StorageAdapterInterface::class),
        $container->get(\App\Storage\Index\StorageIndexInterface::class),
        $em
    ),
    new \App\Command\DocumentUpdateFileCommand(
        $container->get(\App\Storage\Storage::class),
        $container->get(\App\Entity\EntityFactory::class),
        $em
    ),
    new \App\Command\DocumentCorruptionCheckCommand(
        $container->get(\App\Storage\Storage::class),
        $em->getConnection(),
        getenv('PDFINFO_PATH')
    ),
    new \App\Command\FixtureCommand($em, ROOT_PATH . '/db/fixtures'),
    new \App\Command\AddUserCommand(
        $container->get(\App\Entity\EntityFactory::class),
        $container->get(\App\Repository\UserRepositoryInterface::class)
    ),
    new \App\Command\ChangeUserPassword(
        $container->get(\App\Repository\UserRepositoryInterface::class)
    ),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\DiffCommand(),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\ExecuteCommand(),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\GenerateCommand(),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\MigrateCommand(),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\StatusCommand(),
    new \Doctrine\DBAL\Migrations\Tools\Console\Command\VersionCommand(),
]);

$console->run();
